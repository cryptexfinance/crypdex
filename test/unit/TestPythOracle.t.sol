// SPDX-License-Identifier: Apache-2.0
pragma solidity 0.8.17;

import "forge-std/Test.sol";
import "forge-std/console.sol";

import "@pythnetwork/pyth-sdk-solidity/IPyth.sol";
import {PythOracle} from "contracts/oracles/PythOracle.sol";

contract ForkTestPythOracle is Test {
    address pythContract = 0x4305FB66699C3B2702D4d05CF36551390A4c69C6;
    IPyth pyth = IPyth(pythContract);
    bytes32 flokiPriceId = 0x6b1381ce7e874dc5410b197ac8348162c0dd6c0d4c9cd6322672d6c2b1d58293;
    PythOracle pythOracle;

    function setUp() external {
        pythOracle = new PythOracle(pythContract, flokiPriceId);
    }

    function testPrice() external {
        vm.warp(1720649999);
        bytes[] memory updateData = new bytes[](1);
//        curl -X 'GET' 'https://hermes.pyth.network/v2/updates/price/latest?ids%5B%5D=0x6b1381ce7e874dc5410b197ac8348162c0dd6c0d4c9cd6322672d6c2b1d58293'
        updateData[0] = hex"504e41550100000003b801000000040d004994b532a61494d6ed91091bdb74fa9c5e6e39e2c62dccdfece0aaada86e433865ca230f0bdf1ca97c579fb1696675ff8de517069e6abb918eba1459db8cc03e0002c03dc81672fcb84f3f58a0500d2f2d6373aaf8f871b6861529314d5bcacffe9d1fa7ccd7b44e07fb7f09545a5532700ca3046d2a6799c9d334c2ce45ae9b5b060004516e4f69cbb52bf5ceefcd9635e6a702ee71120f5e131d0844479dfc9f01fc5b7d795b862f81c2136da5bafafe1c4756798b59ae6c0ed05e798c270e4436ce670106b7cede5213d0c796a6bd6312e1be91bc546a67ac7852c5d008346170ff7f3c5f313f9e421c85774951cc6ca3885996790e2d95e9d6ece043e8f0557c95979b180108d9974c666dccd0b809ae12f2280b84f12416b9a03de266e71103c7000fc917540ac4e1226fd3aadfe99eacb97b33ca9334d914fc43f10be07a8f35639fdaf418010a3b345d401fdff5b7fa1e64238b72c2b6ac1a13eed021359ded16216d5aec3542775589cb0ef0377dd2297eb69f46ac6cf9a8864363e37af9bcadd3d554c62f04000b58df7f886578ff8b36d11264e35a9b11d440b2d813681ec5ec69dc0e989032b23b99899cf57481f98e9e30c200b0c23ca40430bf6b4044f3a59ec21a8f3dd4a9000c043ffc054d36990a72f39f19957c86423761e69bc2cecbc5b26e3771492709d1316d344b79034fce33e24f874df3c049bae00f47eed2ee56bb15f3222ae51b55000db04c9582ffcb96398f3eac4de25126c70dcfdd7287eea22781bd254838292b78489011beaaed016b014cc24207be40771eeb0e30111e43fa784e0b99692d5f5a000e346e6e4cc44d2a410f3b72d36ee64311ab9b1b1d846a0158cd9975ac0136753772428176ce4053b906348041989d289ef0f77b898027546b9701e73c2c036ed1010f477385a0b87b0caea54aedb009be1873c207fe574654d989369e4a9c28b1d8c55776f4776f2e3466c122263e8562b157e8cd73a72673fd7d93d4284612786e0a0110280ce638c91b8c1b76836ff1da98139d5bc4f1f49078e97cc6c051c9fa887e492c7452a25d7492d0aef904bf6ff61fae96a68274a64116d0d5117a755f67fc190112c5af007a8efe31ff8997ef99e5903adb9cf5c831179b705d2bbc0912cbaba8ca40f38f9b4e9f1ebae56796ab4f4346113d16d89858fa40807b96655127492da801668f090800000000001ae101faedac5851e32b9b23b5f9411a8c2bac4aae3ed4dd7b811dd1a72ea4aa710000000004118b7d01415557560000000000091c0a9100002710991996e9da81bb4284c8f25da5b410acfbadcd01010055006b1381ce7e874dc5410b197ac8348162c0dd6c0d4c9cd6322672d6c2b1d5829300000000001695690000000000000792fffffff600000000668f090800000000668f0908000000000016b5a700000000000007bf0b31f2af7fa7eaeb372764aa0c73c2024db5c139bab92d4abf534a7343d98faacfc5ecc6ec2d16457f6990fc8e45af5407d7ca8c4db2fcb4faa38eaf52544adecd554c952a81715c8892ab74a08990c0086d1571c7a7e9ec11328880df017a2ce0cdfcda6855b45a29a57d681eaefba3a35a9cafb6aa2d9b73ade8c9669b5f3e4b18801f77529d50fc9c27fdbb335efcd2081b608f48a173a8af8df1ac281e320096a7b3defeb5a164a4fe8b9062d4c3d8ab66f641581fbfa2569c4ae16c3922aeb907ba324f7115682f40c814a1a64cb3cd835040cc67a1a060131e82";
        uint256 updateFee = pyth.getUpdateFee(updateData);
        pyth.updatePriceFeeds{ value: updateFee }(updateData);
        assertEq(pythOracle.read(), 148004100000000);
    }
}
